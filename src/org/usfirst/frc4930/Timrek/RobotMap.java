// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4930.Timrek;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.NeutralMode;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	public static WPI_TalonSRX lShoulder; 
	public static WPI_TalonSRX rShoulder;
	
	public static WPI_TalonSRX lElbow;
	public static WPI_TalonSRX rElbow;
	public static WPI_TalonSRX lIntake;
	public static WPI_TalonSRX rIntake;
	public static WPI_TalonSRX lDrvMSTR;
	public static WPI_VictorSPX lDrvSlv1;
	public static WPI_VictorSPX lDrvSlv2;
	public static WPI_TalonSRX rDrvMSTR;
	public static WPI_VictorSPX rDrvSlv1;
	public static WPI_VictorSPX rDrvSlv2;
	public static WPI_TalonSRX dropWhl;

	
	public static DifferentialDrive driveTank;
	
    public static void init() {
    
        lShoulder = new WPI_TalonSRX(21);       
        rShoulder = new WPI_TalonSRX(23);
        
        lElbow = new WPI_TalonSRX(25);
        rElbow = new WPI_TalonSRX(27);
        
        lIntake = new WPI_TalonSRX(29);
        rIntake = new WPI_TalonSRX(31);
        
        lDrvMSTR = new WPI_TalonSRX(22);
        lDrvSlv1 = new WPI_VictorSPX(24); 
        lDrvSlv2 = new WPI_VictorSPX(26);
        
        rDrvMSTR = new WPI_TalonSRX(28);
        rDrvSlv1 = new WPI_VictorSPX(30); 
        rDrvSlv2 = new WPI_VictorSPX(32);
        
        dropWhl = new WPI_TalonSRX(34);
        
        lDrvSlv1.follow(lDrvMSTR);
        lDrvSlv1.setNeutralMode(NeutralMode.Brake);
        
        lDrvSlv2.follow(lDrvMSTR);
        lDrvSlv2.setNeutralMode(NeutralMode.Brake);
        
        rDrvSlv1.follow(lDrvMSTR);
        rDrvSlv1.setNeutralMode(NeutralMode.Brake);
        
        rDrvSlv2.follow(lDrvMSTR);
        rDrvSlv2.setNeutralMode(NeutralMode.Brake);
        
        lDrvSlv1.set(ControlMode.Follower, 22);
        lDrvSlv2.set(ControlMode.Follower, 22);
        rDrvSlv1.set(ControlMode.Follower, 28);
        rDrvSlv2.set(ControlMode.Follower, 28);
        
     
        
        driveTank = new DifferentialDrive(lDrvMSTR, rDrvMSTR);
        driveTank.setSafetyEnabled(false);
        
      
    	
    }
}
